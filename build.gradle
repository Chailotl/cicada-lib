plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = property('mod.name')
version = "${property('mod.version')}+${property('mod.jarname_target')}"
group = property('mod.maven_group')

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

loom {
//	runConfigs.client.ideConfigGenerated = true
//	runConfigs.server.ideConfigGenerated = true

	runs {
		testmodClient {
			client()
			name = "Testmod Client"
			source sourceSets.testmod
		}
		testmodServer {
			server()
			name = "Testmod Server"
			source sourceSets.testmod
		}
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		url "https://maven.enjarai.nl/releases"
	}
	maven {
		url "https://maven.enjarai.nl/mirrors"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${stonecutter.current().version()}"
	mappings "net.fabricmc:yarn:${property('deps.yarn')}:v2"
	modImplementation "net.fabricmc:fabric-loader:${property('deps.fabric_loader')}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric_api')}"

	include api(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:${property('deps.mixin_extras')}"))

	testmodImplementation sourceSets.main.output
}

processResources {
	filesMatching("fabric.mod.json") {
		expand 'mod_version': version, 'target_minecraft': project.property('mod.target')
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	repositories {
		maven {
			name = "enjaraiMaven"
			url = "https://maven.enjarai.nl/releases"
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}

	publications {
		mavenJava(MavenPublication) {
			groupId = group
			artifactId = archivesBaseName
			version = version

			from components.java
		}
	}
}

if (stonecutter.current().isActiveVersion()) {
	loom.runConfigs.testmodClient.ideConfigGenerated = true
	loom.runConfigs.client.ideConfigGenerated = true

	rootProject.tasks.register('buildActive') {
		setGroup 'project'

		dependsOn tasks.getByName('build')
	}
}